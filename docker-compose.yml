version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: secureloguser
      POSTGRES_PASSWORD: securelogpass
      POSTGRES_DB: securelogdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secureloguser -d securelogdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - securelog-network

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://secureloguser:securelogpass@db:5432/securelogdb
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - securelog-network

  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - securelog-network

volumes:
  postgres_data:

networks:
  securelog-network:
    driver: bridge